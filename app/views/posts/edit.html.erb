<div class="container">
  <div class="row">
    <div class="col-md-offset-3 col-md-6">
      <h2>投稿編集ページ</h2>
      <br>
      <br>
      <div class="images-field clearfix">
        <%= form_with model: @post, local: true  do |f| %>
          <div class="form_area">

            <label>現在登録されている画像（削除するものはチェックしてください）</label>
            <% if @post.images.attached? %>
              <% @post.images.each do |image| %>
                <%= f.check_box :images, {:multiple => true}, image.id, false %>
                <%= image_tag image, class: "edit_img" %>
              <% end %>
            <% end %>
            <br><br>
            <%= f.file_field :images, multiple: true, id: :imgInp %>
            <output id="list"></output>
            <br>

            <div id="star"></div><div id="hint" hidden></div>
            <%= f.hidden_field :review, id: "review" %>

            <label>タイトル</label>
            <%= f.text_field :title %><br>
            <label>本文</label>
            <%= f.text_area :body %><br>
            <label id="used_at_label">利用日</label>
            <%= f.date_field :used_at, id: "used_at" %><br>
            <label>店名</label>
            <%= f.text_field :shop_name, id: "shop_name" %><br>
            <label>住所</label>
            <%= f.text_field :shop_address, id: "shop_address" %><br>
            <label>URL</label>
            <%= f.text_field :url, id: "shop_url" %><br>
            <label>価格帯</label>
            <%= f.collection_select :price_id, Price.all, :id, :price_range %><br>

            <%= f.check_box :status, {}, :draft, :published %>
            <label>下書きに保存</label>

            <!-- place_idの保存 -->
            <%= f.hidden_field :shop_map, id: "shop_map" %>
            <!-- 緯度(latitude)の保存 -->
            <%= f.hidden_field :latitude, id: "latitude" %>
            <!-- 経度(longitude)の保存 -->
            <%= f.hidden_field :longitude, id: "longitude" %>

            <div class="pac-card" id="pac-card">
                <input id="pac-input" type="text" placeholder="Enter a location">
            </div>

            <!-- GoogleMap情報 -->
            <div id="map"></div>

            <div id="infowindow-content">
              <img src="" width="16" height="16" id="place-icon">
              <span id="place-name"  class="title"></span><br>
              <span id="place-address"></span>
            </div>
            <br>
            <%= f.submit "更新", class: "btn btn-primary btn-sm" %><br>
            <%= link_to "Back", post_path(@post) %>
          </div>
          <br>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
    $('#star').raty({
        half     : true,
        size     : 36,
        starHalf : '/assets/star-half.png',
        starOff  : '/assets/star-off.png',
        starOn   : '/assets/star-on.png',
        target   : '#hint',
        targetType : 'number',
        targetKeep : true,
        click: function(score) {
          $('#review').val(score);
        }
    });

/////////////////////////// 画像プレビュー ///////////////////////////
  document.getElementById('imgInp').onchange = function(event) {
    initializeFiles();

    var files = event.target.files;

    for (var i = 0, f; f = files[i]; i++) {
      var reader = new FileReader();
      // var size = f.size;
      // var limit = 50000;

      // if ( limit < size ) {
      //     alert('500KBを超えています。500KB以下のファイルを選択してください。');
      //     f.value = '';
      //     return;
      // }

      reader.readAsDataURL(f);

      reader.onload = (function(theFile) {
        return function(e) {
          var div = document.createElement('div');
          div.className = 'reader_file';
          div.innerHTML = '<div class="reader_title">' + encodeURIComponent(theFile.name) + '</div>';
          div.innerHTML += '<img class="reader_image" src="' + e.target.result + '" />';
          document.getElementById('list').insertBefore(div, null);
        }
      })(f);
    }
  };

  function initializeFiles() {
    document.getElementById('list').innerHTML = '';
  }

/////////////////////////// Google Map ///////////////////////////
var map;

function init() {
  // Google Mapで利用する初期設定用の変数
  var latitude = document.getElementById('latitude').value;
  var longitude = document.getElementById('longitude').value;
  var latlng = new google.maps.LatLng(latitude, longitude);
  var opts = {
    zoom: 13,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    center: latlng
  };

  // getElementById("map")の"map"は、body内の<div id="map">より
  map = new google.maps.Map(document.getElementById("map"), opts);

  var card = document.getElementById('pac-card');
  var input = document.getElementById('pac-input');

  map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

  var autocomplete = new google.maps.places.Autocomplete(input);

  // 範囲を地図のビューポートに設定
  autocomplete.bindTo('bounds', map);
  // 検索範囲を制限
  autocomplete.setOptions({strictBounds: true})

  autocomplete.setFields(
      ['formatted_address', 'place_id', 'geometry', 'icon', 'name', 'website']);


  // Markerの初期設定
  var markerOpts = {
    position: new google.maps.LatLng(latitude, longitude),
    map: map,
    title: "marker"
  };
  // 直前で作成したMarkerOptionsを利用してMarkerを作成
  var marker = new google.maps.Marker(markerOpts);

  // 情報ウィンドウ
  var infowindow = new google.maps.InfoWindow();
  var infowindowContent = document.getElementById('infowindow-content');
  // var placeIcon = document.getElementById('place-icon');
  var placeName = document.getElementById('shop_name').value;
  var placeAddress = document.getElementById('shop_address').value;
  // 情報ウィンドウの内容をセットする
  infowindow.setContent(infowindowContent);
  infowindowContent.children['place-name'].textContent = placeName;
  infowindowContent.children['place-address'].innerHTML = placeAddress;
  infowindow.open(map, marker);



  // 情報ウィンドウ
  var infowindow = new google.maps.InfoWindow();
  var infowindowContent = document.getElementById('infowindow-content');
  // 情報ウィンドウの内容をセットする
  infowindow.setContent(infowindowContent);
  var marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  autocomplete.addListener('place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();

    if (!place.geometry) {
      window.alert("No details available for input: '" + place.name + "'");
      return;
    }

    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);
    }
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);

    infowindowContent.children['place-icon'].src = place.icon;
    infowindowContent.children['place-name'].textContent = place.name;
    infowindowContent.children['place-address'].textContent = place.formatted_address.replace(/日本、/g , "" );

    $('#shop_name').val(place.name);
    $('#shop_address').val(place.formatted_address.replace(/日本、/g , "" ));
    $('#shop_url').val(place.website);
    $('#shop_map').val(place.place_id);
    $('#latitude').val(place.geometry.location.lat());
    $('#longitude').val(place.geometry.location.lng());
    infowindow.open(map, marker);
  });
}
$(document).on('turbolinks:load');
init();
</script>

<style>
  .edit_img {
    height: 200px;
  }
  .reader_image {
    width: 300px;
    height: 300px;
  }

  .form_area {
    float: left;
    margin-right: 50px;
  }

  #map {
    height: 400px;
    width: 600px;
  }

  #description {
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
  }

  #infowindow-content .title {
    font-weight: bold;
  }

  #infowindow-content {
    display: none;
  }

  #map #infowindow-content {
    display: inline;
  }

  .pac-card {
    margin: 10px 10px 0 0;
    border-radius: 2px 0 0 2px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    outline: none;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    background-color: #fff;
    font-family: Roboto;
  }

  #pac-container {
    padding-bottom: 12px;
    margin-right: 12px;
  }

  .pac-controls {
    display: inline-block;
    padding: 5px 11px;
  }

  .pac-controls label {
    font-family: Roboto;
    font-size: 13px;
    font-weight: 300;
  }

  #pac-input {
    background-color: #fff;
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
    margin-left: 12px;
    padding: 0 11px 0 13px;
    text-overflow: ellipsis;
    width: 400px;
  }

  #pac-input:focus {
    border-color: #4d90fe;
  }

  #title {
    color: #fff;
    background-color: #4d90fe;
    font-size: 25px;
    font-weight: 500;
    padding: 6px 12px;
  }

  #target {
    width: 345px;
  }
</style>