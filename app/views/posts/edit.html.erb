<div class="container">
  <div class="row">
    <div class="col-md-offset-2 col-md-8">
      <h2>投稿編集ページ</h2>
      <br>
      <br>
      <div class="images-field">
        <%= form_with model: @post, local: true  do |f| %>
          <% if @post.errors.any? %>
            <h4><%= pluralize(@post.errors.count, "") %> 件のエラーにより投稿できません</h4>
            <ul>
              <% @post.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          <% end %>

          <% if @post.images.attached? %>
            <p>現在の投稿画像</p>
            <% @post.images.each do |image| %>
              <%= image_tag image, class: "edit_img" %>
            <% end %>
          <% end %>
          <br><br>

        <%= render partial: 'form', locals: { f: f } %>

        <br>
        <%= f.submit "更新", class: "btn btn-red btn-sm" %><br>
        <%= link_to "Back", post_path(@post) %>
        <br>
        <% end %>
      </div>
    </div>
  </div>
</div>


<script>
/////////////////////////// Google Map ///////////////////////////

  function init() {
    // Google Mapで利用する初期設定用の変数
    let latitude = document.getElementById('latitude').value;
    let longitude = document.getElementById('longitude').value;
    let map;


    if (latitude == "") {
      map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 35.658191, lng: 139.701677},
        zoom: 13
      });

    } else {

      let latlng = new google.maps.LatLng(latitude, longitude);
      let opts = {
        zoom: 13,
        center: latlng
      };
      // 'map'は、body内の<div id="map">より
      map = new google.maps.Map(document.getElementById('map'), opts);

      // Markerの初期設定
      let markerOpts = {
        position: new google.maps.LatLng(latitude, longitude),
        map: map,
        title: "marker"
      };
      // 直前で作成したMarkerOptionsを利用してMarkerを作成
      let marker = new google.maps.Marker(markerOpts);

      // 情報ウィンドウ
      let infowindow = new google.maps.InfoWindow();
      let infowindowContent = document.getElementById('infowindow-content');
      // let placeIcon = document.getElementById('place-icon');
      let placeName = document.getElementById('shop_name').value;
      let placeAddress = document.getElementById('shop_address').value;
      // 情報ウィンドウの内容をセットする
      infowindow.setContent(infowindowContent);
      infowindowContent.children['place-name'].textContent = placeName;
      infowindowContent.children['place-address'].innerHTML = placeAddress;
      infowindow.open(map, marker);
    }

    let card = document.getElementById('pac-card');
    let input = document.getElementById('pac-input');

    map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

    let autocomplete = new google.maps.places.Autocomplete(input);

    // 範囲を地図のビューポートに設定
    autocomplete.bindTo('bounds', map);

    autocomplete.setFields(
        ['formatted_address', 'place_id', 'geometry', 'icon', 'name', 'website']);


    // 情報ウィンドウ
    let infowindow = new google.maps.InfoWindow();
    let infowindowContent = document.getElementById('infowindow-content');
    // let placeIcon = document.getElementById('place-icon');
    let placeName = document.getElementById('shop_name').value;
    let placeAddress = document.getElementById('shop_address').value;

    // 情報ウィンドウ再代入
    infowindow = new google.maps.InfoWindow();
    infowindowContent = document.getElementById('infowindow-content');
    // 情報ウィンドウの内容をセットする
    infowindow.setContent(infowindowContent);
    let marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      let place = autocomplete.getPlace();

      if (!place.geometry) {
        window.alert("No details available for input: '" + place.name + "'");
        return;
      }

      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);
      }
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      infowindowContent.children['place-icon'].src = place.icon;
      infowindowContent.children['place-name'].textContent = place.name;
      infowindowContent.children['place-address'].textContent = place.formatted_address.replace(/日本、/g , "" );

      $('#shop_name').val(place.name);
      $('#shop_address').val(place.formatted_address.replace(/日本、/g , "" ));
      $('#shop_url').val(place.website);
      $('#shop_map').val(place.place_id);
      $('#latitude').val(place.geometry.location.lat());
      $('#longitude').val(place.geometry.location.lng());
      infowindow.open(map, marker);
    });
  }
  $(document).on('turbolinks:load');
  init();
</script>